package com.quakd.web.model;

// Generated Jan 5, 2014 9:49:17 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Member generated by hbm2java
 */
@Entity
@Table(name = "member", catalog = "quser", uniqueConstraints = @UniqueConstraint(columnNames = "USERNAME"))
public class Member implements java.io.Serializable {

	private Long memberId;
	@Valid
	private Country country;
	@Valid
	private UsStates usStates;
	@NotEmpty
	@Email
	private String username;

	private String firstName;
	private String lastName;
	private String password;

	private String address;

	private String city;

	@Pattern(regexp="[0-9]+")
	private String zip;
	private String contactNumber;
	private Date createdDt;
	private Date modifiedDt;

	private String emailVerified;
	private String active;	
	private String subscriber;
	private String provider;

	@Pattern(regexp="\\d{3}-\\d{7}")	
	private String phone1;
	@NotEmpty
	@Pattern(regexp="^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$")
	private String passText;
	@NotEmpty
	private String repassText;
	
	private byte[] memberImg;
	private String memberImgType;
	
	private Set<MemberRoles> memberRoleses = new HashSet<MemberRoles>(0);
	private Set<MemberQidRedeem> memberQidRedeemsForMemberId = new HashSet<MemberQidRedeem>(
			0);
	private Set<MemberQidRedeem> memberQidRedeems = new HashSet<MemberQidRedeem>(
			0);	
	private Set<MemberQuaks> memberQuakses = new HashSet<MemberQuaks>(0);
	private Set<MemberFavorites> memberFavoriteses = new HashSet<MemberFavorites>(
			0);	


	public Member() {
	}

	public Member(Country country, String username, String firstName,
			String lastName, String password, String address, String city,
			String contactNumber, String active, String subscriber) {
		this.country = country;
		this.username = username;
		this.firstName = firstName;
		this.lastName = lastName;
		this.password = password;
		this.address = address;
		this.city = city;
		this.contactNumber = contactNumber;
		this.active = active;
		this.subscriber = subscriber;
	}

	public Member(Country country,
			UsStates usStates, String username, String firstName,
			String lastName, String password, String address, String city,
			String zip, String contactNumber, Date createdDt, Date modifiedDt,
			String emailVerified, String active, String subscriber) {
		this.country = country;
		this.usStates = usStates;
		this.username = username;
		this.firstName = firstName;
		this.lastName = lastName;
		this.password = password;
		this.address = address;
		this.city = city;
		this.zip = zip;
		this.contactNumber = contactNumber;
		this.createdDt = createdDt;
		this.modifiedDt = modifiedDt;
		this.emailVerified = emailVerified;
		this.active = active;
		this.subscriber = subscriber;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "MEMBER_ID", unique = true, nullable = false)
	public Long getMemberId() {
		return this.memberId;
	}

	public void setMemberId(Long memberId) {
		this.memberId = memberId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COUNTRY_CD")
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATE_CD")
	public UsStates getUsStates() {
		return this.usStates;
	}

	public void setUsStates(UsStates usStates) {
		this.usStates = usStates;
	}

	@Column(name = "USERNAME", unique = true, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "FIRST_NAME", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "PASSWORD", length = 1000, nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "ADDRESS", length = 200)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "CITY", length = 100)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "ZIP", length = 10)
	public String getZip() {
		return this.zip;
	}

	public void setZip(String zip) {
		this.zip = zip;
	}

	@Column(name = "CONTACT_NUMBER", length = 10)
	public String getContactNumber() {
		return this.contactNumber;
	}

	public void setContactNumber(String contactNumber) {
		this.contactNumber = contactNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DT", length = 19)
	public Date getCreatedDt() {
		return this.createdDt;
	}

	public void setCreatedDt(Date createdDt) {
		this.createdDt = createdDt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFIED_DT", length = 19)
	public Date getModifiedDt() {
		return this.modifiedDt;
	}

	public void setModifiedDt(Date modifiedDt) {
		this.modifiedDt = modifiedDt;
	}

	@Column(name = "EMAIL_VERIFIED", length = 1)
	public String getEmailVerified() {
		return this.emailVerified;
	}

	public void setEmailVerified(String emailVerified) {
		this.emailVerified = emailVerified;
	}

	@Column(name = "ACTIVE", nullable = false, length = 1)
	public String getActive() {
		return this.active;
	}

	public void setActive(String active) {
		this.active = active;
	}

	@Column(name = "SUBSCRIBER", nullable = false, length = 1)
	public String getSubscriber() {
		return this.subscriber;
	}

	public void setSubscriber(String subscriber) {
		this.subscriber = subscriber;
	}

	@Transient	
	public String getPhone1() {
		return phone1;
	}

	public void setPhone1(String phone1) {
		this.phone1 = phone1;
	}
	
	@Transient	
	public String getPassText() {
		return passText;
	}

	public void setPassText(String passText) {
		this.passText = passText;
	}
	@Transient	
	public String getRepassText() {
		return repassText;
	}

	public void setRepassText(String repassText) {
		this.repassText = repassText;
	}
	
	@Column(name = "MEMBER_IMG")
	public byte[] getMemberImg() {
		return this.memberImg;
	}

	public void setMemberImg(byte[] memberImg) {
		this.memberImg = memberImg;
	}	
	
	@Column(name = "MEMBER_IMG_TYPE", length = 100)
	public String getMemberImgType() {
		return this.memberImgType;
	}

	public void setMemberImgType(String memberImgType) {
		this.memberImgType = memberImgType;
	}	
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<MemberRoles> getMemberRoleses() {
		return this.memberRoleses;
	}

	public void setMemberRoleses(Set<MemberRoles> memberRoleses) {
		this.memberRoleses = memberRoleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<MemberQidRedeem> getMemberQidRedeems() {
		return this.memberQidRedeems;
	}

	public void setMemberQidRedeems(Set<MemberQidRedeem> memberQidRedeems) {
		this.memberQidRedeems = memberQidRedeems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<MemberQuaks> getMemberQuakses() {
		return this.memberQuakses;
	}

	public void setMemberQuakses(Set<MemberQuaks> memberQuakses) {
		this.memberQuakses = memberQuakses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<MemberFavorites> getMemberFavoriteses() {
		return this.memberFavoriteses;
	}

	public void setMemberFavoriteses(Set<MemberFavorites> memberFavoriteses) {
		this.memberFavoriteses = memberFavoriteses;
	}
	
	@Column(name = "PROVIDER", length = 45)
	public String getProvider() {
		return provider;
	}

	public void setProvider(String provider) {
		this.provider = provider;
	}


}
